# Generated by Django 2.1.5 on 2019-03-12 10:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0071_auto_20190306_1058'),
    ]

    operations = [
        migrations.CreateModel(
            name='FundraisingTemplate',
            fields=[
                ('template_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Template')),
                ('donation_form_url', models.URLField(default='https://donate.mozilla.org/?utm_source=desktop-snippet&utm_medium=snippet', max_length=500)),
                ('currency_code', models.CharField(default='usd', max_length=10)),
                ('locale', models.CharField(default='en-US', max_length=10)),
                ('title', models.CharField(blank=True, help_text='Snippet title displayed before snippet text.', max_length=255)),
                ('text', models.TextField()),
                ('text_color', models.CharField(blank=True, max_length=10)),
                ('background_color', models.CharField(blank=True, max_length=10)),
                ('highlight_color', models.CharField(blank=True, default='#FFE900', help_text='Paragraph em highlight color.', max_length=10)),
                ('donation_amount_first', models.PositiveSmallIntegerField(verbose_name='First')),
                ('donation_amount_second', models.PositiveSmallIntegerField(verbose_name='Second')),
                ('donation_amount_third', models.PositiveSmallIntegerField(verbose_name='Third')),
                ('donation_amount_fourth', models.PositiveSmallIntegerField(verbose_name='Fourth')),
                ('selected_button', models.CharField(choices=[('donation_amount_first', 'First'), ('donation_amount_second', 'Second'), ('donation_amount_third', 'Third'), ('donation_amount_fourth', 'Fourth')], default='donation_amount_second', help_text="Donation amount button that's selected by default.", max_length=25)),
                ('button_label', models.CharField(help_text='Text for a button next to main snippet text that links to button_url. Requires button_url.', max_length=50)),
                ('button_color', models.CharField(blank=True, help_text='defaults to firefox theme', max_length=20)),
                ('button_background_color', models.CharField(blank=True, help_text='defaults to firefox theme', max_length=20)),
                ('monthly_checkbox_label_text', models.CharField(max_length=255)),
                ('test', models.CharField(blank=True, choices=[('', 'Default'), ('bold', 'Bold'), ('takeover', 'Takeover')], help_text='Different styles for the snippet.', max_length=10)),
                ('block_button_text', models.CharField(default='Remove this', help_text='Tooltip text used for dismiss button.', max_length=50)),
                ('do_not_autoblock', models.BooleanField(blank=True, default=False, help_text='Used to prevent blocking the snippet after the CTA (link or button) has been clicked.')),
                ('icon', models.ForeignKey(help_text='Snippet icon. 192x192px PNG.', on_delete=django.db.models.deletion.CASCADE, related_name='fundraising_icons', to='base.Icon')),
                ('title_icon', models.ForeignKey(blank=True, help_text='Small icon that shows up before the title / text. 64x64px.PNG. Grayscale.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fundraising_title_icons', to='base.Icon')),
            ],
            bases=('base.template',),
        ),
        migrations.CreateModel(
            name='FxASignupTemplate',
            fields=[
                ('template_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Template')),
                ('scene1_title', models.CharField(blank=True, help_text='Snippet title displayed before snippet text.', max_length=255)),
                ('scene1_text', models.TextField(help_text='Main body text of snippet. HTML subset allowed: i, b, u, strong, em, br.')),
                ('scene1_button_label', models.CharField(help_text='Label for the button on Scene 1 that leads to Scene 2.', max_length=50)),
                ('scene1_button_color', models.CharField(blank=True, help_text='The text color of the button. Valid CSS color. Defaults to Firefox Theme Color.', max_length=20)),
                ('scene1_button_background_color', models.CharField(blank=True, help_text='The background color of the button. Valid CSS color. Defaults to Firefox Theme Color.', max_length=20)),
                ('scene2_title', models.CharField(blank=True, help_text='Title displayed before text in scene 2.', max_length=255)),
                ('scene2_text', models.TextField(help_text='Scene 2 main text. HTML subset allowed: i, b, u, strong, em, br.')),
                ('scene2_button_label', models.CharField(default='Sign me up', help_text='Label for form submit button.', max_length=50)),
                ('scene2_email_placeholder_text', models.CharField(default='Your email here', help_text='Value to show while input is empty.', max_length=255)),
                ('scene2_dismiss_button_text', models.CharField(default='Dismiss', help_text='Label for the dismiss button on Scene 2.', max_length=50)),
                ('utm_term', models.CharField(blank=True, help_text='Value to pass through to GA as utm_term.', max_length=100)),
                ('utm_campaign', models.CharField(blank=True, help_text='Value to pass through to GA as utm_campaign.', max_length=100)),
                ('block_button_text', models.CharField(default='Remove this', help_text='Tooltip text used for dismiss button.', max_length=50)),
                ('do_not_autoblock', models.BooleanField(blank=True, default=False, help_text='Used to prevent blocking the snippet after the CTA (link or button) has been clicked.')),
                ('scene1_icon', models.ForeignKey(help_text='Snippet icon. 192x192px PNG.', on_delete=django.db.models.deletion.CASCADE, related_name='fxasignup_scene1_icons', to='base.Icon')),
                ('scene1_title_icon', models.ForeignKey(blank=True, help_text='Small icon that shows up before the title / text. 64x64px.PNG. Grayscale.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fxasignup_scene1_title_icons', to='base.Icon')),
            ],
            bases=('base.template',),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='block_button_text',
            field=models.CharField(default='Remove this', help_text='Tooltip text used for dismiss button.', max_length=50),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='button_color',
            field=models.CharField(blank=True, help_text='The text color of the button. Valid CSS color.', max_length=20),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='button_label',
            field=models.CharField(blank=True, help_text='Text for a button next to main snippet text that links to button_url. Requires button_url.', max_length=50),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='button_url',
            field=models.URLField(blank=True, help_text='A url, button_label links to this', max_length=500, validators=[django.core.validators.URLValidator(schemes=['https'])]),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='do_not_autoblock',
            field=models.BooleanField(blank=True, default=False, help_text='Used to prevent blocking the snippet after the CTA (link or button) has been clicked.'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='icon',
            field=models.ForeignKey(help_text='Snippet icon. 192x192px PNG.', on_delete=django.db.models.deletion.CASCADE, related_name='icons', to='base.Icon'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='section_title_icon',
            field=models.ForeignKey(blank=True, help_text='Section title icon. 32x32px. PNG. section_title_text must also be specified to display.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='section_icons', to='base.Icon'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='section_title_text',
            field=models.CharField(blank=True, help_text='Section title text. section_title_icon must also be specified to display.', max_length=255),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='section_title_url',
            field=models.URLField(blank=True, help_text='A url, section_title_text links to this', validators=[django.core.validators.URLValidator(schemes=['https'])]),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='tall',
            field=models.BooleanField(blank=True, default=False, help_text='To be used by fundraising only, increases height to roughly 120px. Defaults to false.'),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='title',
            field=models.CharField(blank=True, help_text='Snippet title displayed before snippet text.', max_length=255),
        ),
        migrations.AlterField(
            model_name='simpletemplate',
            name='title_icon',
            field=models.ForeignKey(blank=True, help_text='Small icon that shows up before the title / text. 64x64px.PNG. Grayscale.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='title_icons', to='base.Icon'),
        ),
    ]
